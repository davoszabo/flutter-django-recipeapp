version: '3.8'

services:

  # angular:
  #   build:
  #     context: ./pto-forecaster-frontend
  #     dockerfile: Dockerfile
  #   container_name: dev_forecaster_angular
  #   command: ng serve
  #   volumes:
  #     - ./pto-forecaster-frontend/src/:/usr/src/angular/
  #   ports:
  #     - "4200:4200"
  #   # networks:
  #   #   - frontend

  django:
    build: ./docker
    image: django
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/usr/src/app/
    # environment:
    #   - POSTGRES_NAME=postgres
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=postgres
    ports:
      - "8000:8000"
    env_file:
      - ./.env/dev.env
    # networks:
    #   - frontend
    #   - backend
    depends_on:
      - db

  db:
    image: postgres:11
    container_name: postgres_db
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432" # FOR OUTSIDE CONNECTION
    # networks:
    #   - backend

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    logging:
      driver: none
    # networks:
    #   frontend:
    #     driver: bridge
    #   backend:
    #     driver: bridge

    # volumes:
    #   postgres_data:
    # static_volume:
    # media_volume:
